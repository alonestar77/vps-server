name: Deploy Xray Reality Server

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Set up job
      run: echo "Starting Deployment..."

    - name: Install and Run Xray
      run: |
        sudo apt update
        sudo apt install -y curl unzip
        mkdir -p /usr/local/etc/xray
        mkdir -p /usr/local/bin
        curl -L https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-64.zip -o xray.zip
        unzip xray.zip
        mv xray /usr/local/bin/xray
        chmod +x /usr/local/bin/xray

    - name: Configure Xray (VLESS Reality server)
      run: |
        UUID=$(cat /proc/sys/kernel/random/uuid)
        PORT=443
        PRIVATE_KEY=$(xray x25519 | grep Private | awk '{print $3}')
        PUBLIC_KEY=$(xray x25519 | grep Public | awk '{print $3}')
        SHORT_ID=$(openssl rand -hex 8)
        cat << EOF > /usr/local/etc/xray/config.json
{
  "inbounds": [
    {
      "port": $PORT,
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "$UUID",
            "flow": "xtls-rprx-vision"
          }
        ],
        "decryption": "none"
      },
      "streamSettings": {
        "network": "tcp",
        "security": "reality",
        "realitySettings": {
          "show": false,
          "dest": "www.google.com:443",
          "xver": 0,
          "serverNames": [
            "www.google.com"
          ],
          "privateKey": "$PRIVATE_KEY",
          "shortIds": [
            "$SHORT_ID"
          ]
        }
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom",
      "settings": {}
    }
  ]
}
EOF

    - name: Start Xray
      run: |
        nohup xray run -c /usr/local/etc/xray/config.json > /dev/null 2>&1 &

    - name: Show Connection Info
      run: |
        sleep 5
        UUID=$(cat /usr/local/etc/xray/config.json | grep -oP '(?<="id": ")[^"]*')
        PRIVATE_KEY=$(cat /usr/local/etc/xray/config.json | grep -oP '(?<="privateKey": ")[^"]*')
        SHORT_ID=$(cat /usr/local/etc/xray/config.json | grep -oP '(?<="shortIds":
